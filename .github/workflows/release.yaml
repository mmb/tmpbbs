---
name: Release a new version
'on':
  push:
    tags:
      - v*.*.*

env:
  DOCKER_HUB_IMAGE: mm62/tmpbbs

jobs:
  create-release:
    name: Build and publish a container image and create a GitHub release
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out repo
        uses: actions/checkout@v5
      - name: Extract image metadata
        id: metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: |
            ${{ env.DOCKER_HUB_IMAGE }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern={{raw}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
      - name: Set up buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # yamllint disable rule:line-length
      - name: Build and push image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          platforms: linux/amd64,linux/arm,linux/arm64
          build-args: |
            VERSION=${{ steps.metadata.outputs.version }}
            COMMIT=${{ github.sha }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          sbom: true
          push: true
      - name: Generate signed build provenance attestation for Docker Hub
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: index.docker.io/${{ env.DOCKER_HUB_IMAGE }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - name: >-
          Generate signed build provenance attestation for GitHub Container Registry
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - name: Install golang
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - name: Build binaries
        run: >-
          ./build-release-binaries.sh "${{ steps.metadata.outputs.version }}"
          "${{ github.sha }}"
      - name: Generate signed build provenance attestation for binaries
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: release/*
      - name: Create release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836  # yamllint disable rule:line-length
        with:
          body: |
            ### Container Images

            - ${{ env.DOCKER_HUB_IMAGE }}:${{ steps.metadata.outputs.version }}
            - ghcr.io/${{ github.repository }}:${{ steps.metadata.outputs.version }}
          files: release/*
          generate_release_notes: true
